/**************************************************************
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 *************************************************************/



#include "TextPropertyPanel.hrc"
#include <sfx2/sidebar/ResourceDefinitions.hrc>
#include "helpid.hrc"

Control RID_SIDEBAR_TEXT_PANEL
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;

	Size = MAP_APPFONT ( PROPERTYPAGE_WIDTH, SECTIONPAGE_MARGIN_VERTICAL_TOP + CBOX_HEIGHT + TOOLBOX_ITEM_HEIGHT * 2 + CONTROL_SPACING_VERTICAL * 2 + SECTIONPAGE_MARGIN_VERTICAL_BOT ) ;
	HelpID = HID_PROPERTYPANEL_TEXT_SECTION ;
	Text = "Text" ;

	ComboBox CB_SBFONT_FONT
	{
		Border = TRUE ;
		Pos = MAP_APPFONT ( X0, FIRST_LINE_Y ) ;
		Size = MAP_APPFONT ( FONTNAME_WIDTH, CONTROL_HEIGHT_FONT_NAME ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		HelpID = HID_COMBO_FONT_NAME ;
		QuickHelpText [ en-US ] = "Font" ;
//		Command = ".uno:CharFontName" ;
	};
	MetricBox MB_SBFONT_FONTSIZE
	{
		Border = TRUE ;
		Pos = MAP_APPFONT ( X2, FIRST_LINE_Y ) ;
		Size = MAP_APPFONT ( FONTSIZE_WIDTH, CONTROL_HEIGHT_FONT_SIZE ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		HelpID = HID_METRIC_FONT_SIZE ;
		QuickHelpText [ en-US ] = "Font Size" ;
//		Command = ".uno:FontHeight" ;
	};

	ToolBox TB_INCREASE_DECREASE
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X2, SECOND_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_WIDTH * 2, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_FONTSIZE_INDE ;
		Text = "Font Size Adjusting" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_INCREASE ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_INCREASE ;
				Command = ".uno:Grow" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_DECREASE ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_DECREASE ;
				Command = ".uno:Shrink" ;
			};
		};
	};
	ToolBox TB_FONT
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X0 + 1, SECOND_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_WIDTH * 4 + TOOLBOX_ITEM_DD_WIDTH, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_FONT ;
		Text = "Font Effects" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_BOLD ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_BOLD ;
				Command = ".uno:Bold" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_ITALIC ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_ITALIC ;
				Command = ".uno:Italic" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_UNDERLINE ;
				DropDown = TRUE ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_UNDERLINE ;
				Command = ".uno:Underline" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_STRIKEOUT ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_STRIKEOUT ;
				Command = ".uno:Strikeout" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_SHADOWED ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_SHADOWED ;
				Command = ".uno:Shadowed" ;
			};
		};
	};

	ToolBox TB_FONTCOLOR
	{
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_FONT_COLOR ;
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X3, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_DD_WIDTH, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_FONTCOLOR ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_FONT_COLOR ;
				DropDown = TRUE ;
				Command = ".uno:Color" ;
			};
		};
	};
	ToolBox TB_FONTCOLOR_SW
	{
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_FONT_COLOR ;
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X3, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_DD_WIDTH, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_FONTCOLOR ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_FONT_COLOR ;
				DropDown = TRUE ;
				Command = ".uno:FontColor" ;
			};
		};
	};

	ToolBox TB_HIGHLIGHT
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X2, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_DD_WIDTH, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_HIGHLIGHT_COLOR ;
		Text = "Highlight Color" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_HIGHLIGHT ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_HIGHLIGHT_COLOR ;
				DropDown = TRUE ;
				Command = ".uno:BackColor" ;
			};
		};
	};

	ToolBox TB_SCRIPT_SW
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X0 + 1, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_WIDTH * 2, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_SCRIPT_SW ;
		Text = "Font Position" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_SUPER_SW ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_SUPER_SW ;
				Command = ".uno:SuperScript" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_SUB_SW ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_SUB_SW ;
				Command = ".uno:SubScript" ;
			};
		};
	};
	ToolBox TB_SCRIPT
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X0 + 1, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_ITEM_WIDTH * 2, TOOLBOX_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_PPROPERTYPANEL_TEXT_TBX_SCRIPT ;
		Text = "Font Position" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_SUPER ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_SUPER ;
				Command = ".uno:SuperScript" ;
			};
			ToolBoxItem
			{
				Identifier = TBI_SUB ;
				HelpID = HID_PPROPERTYPANEL_TEXT_TBI_SUB ;
				Command = ".uno:SubScript" ;
			};
		};
	};

	ToolBox TB_SPACING
	{
		SVLook = TRUE ;
		Pos = MAP_APPFONT ( X1, THIRD_LINE_Y ) ;
		Size = MAP_APPFONT ( TOOLBOX_24_16_ITEM_DD_WIDTH, TOOLBOX_24_16_ITEM_HEIGHT ) ;
		TabStop = TRUE ;
		HelpID = HID_TB_SPACING ;
		Text = "Character Spacing" ;
		ItemList =
		{
			ToolBoxItem
			{
				Identifier = TBI_SPACING ;
				DropDown = TRUE ;
				HelpID = HID_TBI_SPACING ;
				Command = ".uno:Spacing" ;
			};
		};
	};
};

Control RID_POPUPPANEL_TEXTPAGE_UNDERLINE
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;

	Size = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL * 2 + POPUP_BORDER_WIDTH + VS_UNDERLINE_WIDTH, 13 + VS_UNDERLINE_HEIGHT + POPUP_BORDER_HEIGHT + POPUPPANEL_MARGIN_SMALL * 2 + POPUPPANEL_MARGIN_LARGE ) ;
	Control VS_UNDERLINE
	{
		HelpID = HID_PPROPERTYPANEL_TEXT_UNDERLINE_VS ;
		Hide = TRUE ;
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y ) ;
		Size = MAP_APPFONT ( VS_UNDERLINE_WIDTH, VS_UNDERLINE_HEIGHT ) ;
		TabStop = TRUE ;
		Text = "Underline" ;
	};

	PushButton PB_OPTIONS
	{
		HelpID = HID_UNDERLINE_BTN ;
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL + OFFSET_X, POPUPPANEL_MARGIN_SMALL * 2 + OFFSET_Y + VS_UNDERLINE_HEIGHT ) ;
		Size = MAP_APPFONT ( VS_UNDERLINE_WIDTH, 13 ) ;
		TabStop = TRUE ;
		Text [ en-US ] = "~More Options..." ;
	};


	Image IMG_SINGLE
	{
		ImageBitmap = Bitmap {File = "symphony/line1.png" ;} ;
	};
	Image IMG_DOUBLE
	{
		ImageBitmap = Bitmap {File = "symphony/line2.png" ;} ;
	};
	Image IMG_BOLD2
	{
		ImageBitmap = Bitmap {File = "symphony/line3.png" ;} ;
	};
	Image IMG_DOT
	{
		ImageBitmap = Bitmap {File = "symphony/line4.png" ;} ;
	};
	Image IMG_DOT_BOLD
	{
		ImageBitmap = Bitmap {File = "symphony/line5.png" ;} ;
	};
	Image IMG_DASH
	{
		ImageBitmap = Bitmap {File = "symphony/line6.png" ;} ;
	};
	Image IMG_DASH_LONG
	{
		ImageBitmap = Bitmap {File = "symphony/line7.png" ;} ;
	};
	Image IMG_DASH_DOT
	{
		ImageBitmap = Bitmap {File = "symphony/line8.png" ;} ;
	};
	Image IMG_DASH_DOT_DOT
	{
		ImageBitmap = Bitmap {File = "symphony/line9.png" ;} ;
	};
	Image IMG_WAVE
	{
		ImageBitmap = Bitmap {File = "symphony/line10.png" ;} ;
	};

	// high contract
	Image IMG_SINGLE_H
	{
		ImageBitmap = Bitmap {File = "symphony/line1_h.png" ;} ;
	};
	Image IMG_DOUBLE_H
	{
		ImageBitmap = Bitmap {File = "symphony/line2_h.png" ;} ;
	};
	Image IMG_BOLD2_H
	{
		ImageBitmap = Bitmap {File = "symphony/line3_h.png" ;} ;
	};
	Image IMG_DOT_H
	{
		ImageBitmap = Bitmap {File = "symphony/line4_h.png" ;} ;
	};
	Image IMG_DOT_BOLD_H
	{
		ImageBitmap = Bitmap {File = "symphony/line5_h.png" ;} ;
	};
	Image IMG_DASH_H
	{
		ImageBitmap = Bitmap {File = "symphony/line6_h.png" ;} ;
	};
	Image IMG_DASH_LONG_H
	{
		ImageBitmap = Bitmap {File = "symphony/line7_h.png" ;} ;
	};
	Image IMG_DASH_DOT_H
	{
		ImageBitmap = Bitmap {File = "symphony/line8_h.png" ;} ;
	};
	Image IMG_DASH_DOT_DOT_H
	{
		ImageBitmap = Bitmap {File = "symphony/line9_h.png" ;} ;
	};
	Image IMG_WAVE_H
	{
		ImageBitmap = Bitmap {File = "symphony/line10_h.png" ;} ;
	};

	// image when selected
	Image IMG_SINGLE_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line1.png" ;} ;
	};
	Image IMG_DOUBLE_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line2.png" ;} ;
	};
	Image IMG_BOLD2_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line3.png" ;} ;
	};
	Image IMG_DOT_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line4.png" ;} ;
	};
	Image IMG_DOT_BOLD_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line5.png" ;} ;
	};
	Image IMG_DASH_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line6.png" ;} ;
	};
	Image IMG_DASH_LONG_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line7.png" ;} ;
	};
	Image IMG_DASH_DOT_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line8.png" ;} ;
	};
	Image IMG_DASH_DOT_DOT_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line9.png" ;} ;
	};
	Image IMG_WAVE_SEL
	{
		ImageBitmap = Bitmap {File = "symphony/selected-line10.png" ;} ;
	};

	String STR_WITHOUT
	{
		Text [ en-US ] = "(Without)" ;
	};

	// tips
	String STR_SINGLE
	{
		Text [ en-US ] = "Single" ;
	};
	String STR_DOUBLE
	{
		Text [ en-US ] = "Double" ;
	};
	String STR_BOLD
	{
		Text [ en-US ] = "Bold" ;
	};
	String STR_DOT
	{
		Text [ en-US ] = "Dotted" ;
	};
	String STR_DOT_BOLD
	{
		Text [ en-US ] = "Dotted (Bold)" ;
	};
	String STR_DASH
	{
		Text [ en-US ] = "Dash" ;
	};
	String STR_DASH_LONG
	{
		Text [ en-US ] = "Long Dash" ;
	};
	String STR_DASH_DOT
	{
		Text [ en-US ] = "Dot Dash" ;
	};
	String STR_DASH_DOT_DOT
	{
		Text [ en-US ] = "Dot Dot Dash" ;
	};
	String STR_WAVE
	{
		Text [ en-US ] = "Wave" ;
	};

};


Control RID_POPUPPANEL_TEXTPAGE_FONT_COLOR
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;
	Size = MAP_APPFONT ( POPUP_COLOR_PICKER_WIDTH, POPUP_COLOR_PICKER_HEIGHT ) ;

	Control VS_FONT_COLOR
	{
		HelpID = HID_PPROPERTYPANEL_TEXT_COLOR_VS ;
		Hide = TRUE ;
		Pos = MAP_APPFONT ( OFFSET_X, OFFSET_Y ) ;
		Size = MAP_APPFONT ( POPUP_COLOR_PICKER_WIDTH - OFFSET_X * 2, POPUP_COLOR_PICKER_HEIGHT - OFFSET_Y * 2 ) ;
		TabStop = TRUE ;
		Text = "Color Picker" ;
	};
	String STR_AUTOMATICE
	{
		Text [ en-US ] = "Automatic" ;
	};
};

Control RID_POPUPPANEL_TEXTPAGE_SPACING
{
	OutputSize = TRUE ;
	DialogControl = TRUE ;
	Border = FALSE ;

	Size = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL * 2 + POPUP_BORDER_WIDTH + VS_SPACING_WIDTH, POPUPPANEL_MARGIN_SMALL * 3 + 15 * 6 + CUSTOM_HEIGHT + TEXT_HEIGHT + POPUPPANEL_MARGIN_LARGE + POPUP_BORDER_WIDTH + 1 ) ;

	Control VS_SPACING
	{
		HelpId = HID_PPROPERTYPANEL_TEXT_SPACING_VS ;
		Hide = TRUE ;
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_SMALL + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y ) ;
		Size = MAP_APPFONT ( VS_SPACING_WIDTH, 15 * 6 ) ;
		TabStop = TRUE ;
		Text = "Character Spacing" ;
	};

	FixedText FT_LASTCUSTOM
	{
		Pos = MAP_APPFONT ( POPUPPANEL_MARGIN_LARGE + OFFSET_X, POPUPPANEL_MARGIN_SMALL + OFFSET_Y + POPUPPANEL_MARGIN_SMALL + 15 * 6 ) ;
		Size = MAP_APPFONT ( CUSTOM_WIDTH, TEXT_HEIGHT ) ;
		Left = TRUE ;
		Text [ en-US ] = "Custom:" ;
	};
	// custom area
	FixedText	FT_SPACING
	{
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE ) ;
		Size = MAP_APPFONT ( CUSTOM_WIDTH - POPUPPANEL_MARGIN_LARGE * 2, TEXT_HEIGHT ) ;
		Left = TRUE ;
		Text [ en-US ] = "~Character spacing: " ;
	};
	ListBox LB_KERNING
	{
		Border = TRUE ;
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE + TEXT_HEIGHT + POPUPPANEL_MARGIN_SMALL ); // 20
		Size = MAP_APPFONT ( CUSTOM_WIDTH - POPUPPANEL_MARGIN_LARGE * 2, 80 ) ;
		TabStop = TRUE ;
		DropDown = TRUE ;
		HelpID = HID_SPACING_CB_KERN ;
		StringList [ en-US ] =
		{
			< "Default" ; Default ;		> ;
			< "Expanded" ; Default ;	> ;
			< "Condensed" ; Default ;	> ;
		};
	};
	FixedText	FT_BY
	{
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE * 2 + TEXT_HEIGHT + POPUPPANEL_MARGIN_SMALL + CBOX_HEIGHT ) ;
		Size = MAP_APPFONT ( CUSTOM_WIDTH - POPUPPANEL_MARGIN_LARGE * 2, TEXT_HEIGHT ) ;
		Left = TRUE ;
		Text [ en-US ] = "Change ~by: " ;
	};
	MetricField ED_KERNING
	{
		HelpID = HID_SPACING_MB_KERN ;
		Border = TRUE ;
		Pos = MAP_APPFONT ( CUSTOM_X + POPUPPANEL_MARGIN_LARGE, CUSTOM_Y + POPUPPANEL_MARGIN_LARGE * 2 + TEXT_HEIGHT * 2 + POPUPPANEL_MARGIN_SMALL * 2 + CBOX_HEIGHT ) ; // 60
		Size = MAP_APPFONT ( CUSTOM_WIDTH - POPUPPANEL_MARGIN_LARGE * 2, MBOX_HEIGHT ) ;
		TabStop = TRUE ;
		Repeat = TRUE ;
		Spin = TRUE ;
		Maximum = 9999 ;
		DecimalDigits = 1 ;
		Unit = FUNIT_POINT ;
		SpinSize = 10 ;
	};

	Image IMG_NORMAL
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_normal.png" ;} ;
	};
	Image IMG_VERY_TIGHT
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_very_tight.png" ;} ;
	};
	Image IMG_TIGHT
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_tight.png" ;} ;
	};
	Image IMG_LOOSE
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_loose.png" ;} ;
	};
	Image IMG_VERY_LOOSE
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_very_loose.png" ;} ;
	};

	Image IMG_NORMAL_S
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_normal_s.png" ;} ;
	};
	Image IMG_VERY_TIGHT_S
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_very_tight_s.png" ;} ;
	};
	Image IMG_TIGHT_S
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_tight_s.png" ;} ;
	};
	Image IMG_LOOSE_S
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_loose_s.png" ;} ;
	};
	Image IMG_VERY_LOOSE_S
	{
		ImageBitmap = Bitmap {File = "symphony/spacing_very_loose_s.png" ;} ;
	};

	Image IMG_CUSTOM
	{
		ImageBitmap = Bitmap {File = "symphony/last_custom_common.png" ;} ;
	};
	Image IMG_CUSTOM_GRAY
	{
		ImageBitmap = Bitmap {File = "symphony/last_custom_common_grey.png" ;} ;
	};

	String STR_VERY_TIGHT
	{
		Text [ en-US ] = "Very Tight" ;
	};
	String STR_TIGHT
	{
		Text [ en-US ] = "Tight" ;
	};
	String STR_NORMAL
	{
		Text [ en-US ] = "Normal" ;
	};
	String STR_LOOSE
	{
		Text [ en-US ] = "Loose" ;
	};
	String STR_VERY_LOOSE
	{
		Text [ en-US ] = "Very Loose" ;
	};
	String STR_CUSTOM
	{
		Text [ en-US ] = "Last Custom Value" ;
	};

	String STR_VERY_TIGHT_TIP
	{
		Text [ en-US ] = " Spacing: Condensed By: 3 pt" ;
	};
	String STR_TIGHT_TIP
	{
		Text [ en-US ] = " Spacing: Condensed By: 1.5 pt" ;
	};
	String STR_NORMAL_TIP
	{
		Text [ en-US ] = " Spacing: Normal" ;
	};
	String STR_LOOSE_TIP
	{
		Text [ en-US ] = " Spacing: Expanded By: 3 pt" ;
	};
	String STR_VERY_LOOSE_TIP
	{
		Text [ en-US ] = " Spacing: Expanded By: 6 pt" ;
	};
	String STR_CUSTOM_C_TIP
	{
		Text [ en-US ] = " Spacing: Condensed By: " ;
	};
	String STR_CUSTOM_E_TIP
	{
		Text [ en-US ] = " Spacing: Expanded By: " ;
	};
	String STR_PT
	{
		Text [ en-US ] = "pt" ;
	};
};

// ********************************************************************** EOF
